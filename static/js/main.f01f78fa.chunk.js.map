{"version":3,"sources":["fbase.js","components/Authform.js","routes/Auth.js","components/Rweet.js","components/RweetFactory.js","routes/Home.js","components/Navigaion.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Rweet","rweetObj","isOwner","editing","setEditing","text","newRweet","setNewRweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","RweetFactory","userObj","rweet","setRweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createrId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","rweets","setRweets","useEffect","onSnapshot","snapshot","rweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyRweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f01f78fa.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst inputStyles = {};\r\nconst AuthForm = () => {\r\n  const [email, setEmail] =  useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: {name, value},\r\n    } = event;\r\n    if(name === \"email\"){\r\n      setEmail(value);\r\n    } else if(name === \"password\"){\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try{\r\n      let data;\r\n      if (newAccount) {\r\n        //create accout\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch(error){\r\n       setError(error.message);\r\n    }\r\n  };\r\n  const toggleAcoount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}  className=\"authInput authSubmit\" />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAcoount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"create new account\"}</span>\r\n    </>  \r\n  );\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/Authform\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = ()  => {\r\n  \r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: {name},\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\"){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  }\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n       <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Rweet = ({rweetObj, isOwner}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newRweet, setNewRweet] = useState(rweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete the rweet?\");\r\n    if(ok){\r\n      //delete\r\n      await dbService.doc(`rweets/${rweetObj.id}`).delete();\r\n      await storageService.refFromURL(rweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`rweets/${rweetObj.id}`).update({\r\n      text: newRweet,\r\n    })\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const { target: {value} } = event;\r\n    setNewRweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  value={newRweet}\r\n                  onChange={onChange} \r\n                  type=\"text\" \r\n                  placeholder=\"Edit your rweet\" \r\n                  required\r\n                />\r\n                <input type=\"submit\" value=\"Update Rweet\"  className=\"formBtn\" />\r\n              </form>\r\n              <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>  \r\n          <h4>{rweetObj.text}</h4>\r\n          {rweetObj.attachmentUrl && <img src={rweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            // <>\r\n            //   <button onClick={onDeleteClick}>Delete Rweet</button>\r\n            //   <button onClick={toggleEditing}>Edit Rweet</button>\r\n            // </>\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n    \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rweet;","import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst RweetFactory = ({userObj}) => {\r\n  const [rweet, setRweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (rweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n       const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();    \r\n    }\r\n    const rweetObj = {\r\n      text: rweet,\r\n      createdAt: Date.now(),\r\n      createrId: userObj.uid,\r\n      attachmentUrl\r\n    }\r\n    await dbService.collection(\"rweets\").add(rweetObj);\r\n    setRweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const { target: {value} } = event;\r\n    setRweet(value);\r\n  };\r\n  const onFileChange = (event) =>{\r\n    const {target: {files}} = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: {result},\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n     <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={rweet}\r\n          onChange={onChange} \r\n          type=\"text\" \r\n          placeholder=\"What's on your mind?\" \r\n          maxLength={120} \r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && ( \r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n     \r\n    </form>\r\n  );   \r\n};\r\n\r\nexport default RweetFactory;","import Rweet from \"components/Rweet\";\r\nimport RweetFactory from \"components/RweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n  \r\n \r\n  const [rweets, setRweets] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    dbService.collection(\"rweets\").onSnapshot((snapshot) => {\r\n      const rweetArray = snapshot.docs.map(doc => ({\r\n        id: doc.id, \r\n        ...doc.data(),\r\n      }));\r\n      setRweets(rweetArray);\r\n    })\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n        <RweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n          {rweets.map((rweet) => (\r\n            <Rweet key={rweet.id} rweetObj={rweet} isOwner={rweet.createrId === userObj.uid} />\r\n          ))}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n  <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n    <li>\r\n      <Link to=\"/\" style={{ marginRight: 10 }}>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <Link \r\n        to=\"/profile\" \r\n        style={{\r\n          marginLeft: 10,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          fontSize: 12,\r\n        }}>\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          {userObj.displayName}'s profile\r\n      </Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  }\r\n  const getMyRweets = async() =>{\r\n    const rweets = await dbService.collection(\"rweets\").where(\"createrId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\r\n    console.log(rweets.docs.map((doc) => doc.data()));\r\n  }\r\n  const onChange = (event) =>{\r\n    const {target: {value}} = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName != newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getMyRweets();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">   \r\n        <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\r\n        <input type=\"submit\" value=\"update Profile\" className=\"formBtn\"\r\n          style={{marginTop: 10,}} />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch  } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigaion\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ( {refreshUser, isLoggedIn, userObj} ) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route> \r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n          \r\n        )\r\n        \r\n        : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n          )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] =  useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else{\n        setUserObj(null);\n      }\n      setInit(true);\n    }); \n  },[]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser} \n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj} \n        />\n      ) : (\n        \"Initializing....\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Rwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}